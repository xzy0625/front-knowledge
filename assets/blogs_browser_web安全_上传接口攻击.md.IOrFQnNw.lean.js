import{_ as a,c as t,ag as r,o}from"./chunks/framework.BcCMgSRd.js";const l="/front-knowledge/assets/png.Cn2m43B-.png",s="/front-knowledge/assets/png-20250116151627633.78Jy_nyq.png",g=JSON.parse('{"title":"黑产上传接口攻击","description":"","frontmatter":{},"headers":[],"relativePath":"blogs/browser/web安全/上传接口攻击.md","filePath":"blogs/browser/web安全/上传接口攻击.md","lastUpdated":1737013267000}'),i={name:"blogs/browser/web安全/上传接口攻击.md"};function n(d,e,c,p,h,m){return o(),t("div",null,e[0]||(e[0]=[r('<h1 id="黑产上传接口攻击" tabindex="-1">黑产上传接口攻击 <a class="header-anchor" href="#黑产上传接口攻击" aria-label="Permalink to &quot;黑产上传接口攻击&quot;">​</a></h1><h2 id="攻击方法" tabindex="-1">攻击方法 <a class="header-anchor" href="#攻击方法" aria-label="Permalink to &quot;攻击方法&quot;">​</a></h2><p>黑产利用腾讯cos存储作为图床，将视频ts文件上面覆盖一层png文件，伪装成图片文件上传创意中心之后获取url地址；再将url地址写入到视频索引文件m3u8文件中；播放的时候，利用改造后的播放器去除伪装之后对ts文件进行播放；因此，CDN 中会出现大量黑产图片。</p><p>此种攻击经常发生在内容上传接口，例如小红书，微博的图片上传。黑客有一套完整的上传和播放链路，我们平时看到的盗版视频网站的视频基本都是用这种攻击方法进行视频存储的。一般都配备了很多信号源(其实就是攻击了好几个厂家的存储)。</p><img src="'+l+'" alt="img" style="zoom:50%;"><p><img src="'+s+'" alt="img"></p><h2 id="具体方法" tabindex="-1">具体方法 <a class="header-anchor" href="#具体方法" aria-label="Permalink to &quot;具体方法&quot;">​</a></h2><p><a href="https://www.52pojie.cn/thread-1889161-1-1.html" target="_blank" rel="noreferrer">https://www.52pojie.cn/thread-1889161-1-1.html</a></p><h2 id="对抗策略" tabindex="-1">对抗策略 <a class="header-anchor" href="#对抗策略" aria-label="Permalink to &quot;对抗策略&quot;">​</a></h2><ol><li>上传接口需要登录后才能使用，并且一段时间内限制上传次数，过多就进行封禁</li><li>对<code>CDN</code>进行<code>refer</code>过滤，保证其他网站无法访问到我们的<code>CDN</code>资源</li><li>针对user-agent也进行了一轮检查，存在非浏览器访问的user-agent，对user-agent也增加了白名单配置</li><li>对可疑<code>ip</code>和用户直接封禁，不让上传</li><li>增加图像检测能力，对可疑图片进行<code>resize</code>内容改写。</li><li><code>url</code>增加过期策略。对于头像这种通过返回临时链接的方式进行处理。</li><li>高热素材进行自动标记清理。如果图片访问量超过正常频率就进行文件名重写。</li><li>对图片进行分路径存储，对于可以可疑用户进行快速打击。</li></ol>',10)]))}const u=a(i,[["render",n]]);export{g as __pageData,u as default};
