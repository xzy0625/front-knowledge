import{_ as a,c as s,o as t,at as i}from"./chunks/framework.BvgWjPB6.js";const o="/front-knowledge/assets/image-20250103110138968.D4pL99gC.png",p="/front-knowledge/assets/image-20250103110222320.DUtTP5js.png",_=JSON.parse('{"title":"如何调试vite源码","description":"","frontmatter":{},"headers":[],"relativePath":"blogs/project/vite/如何调试源码.md","filePath":"blogs/project/vite/如何调试源码.md","lastUpdated":1738931418000}'),n={name:"blogs/project/vite/如何调试源码.md"};function l(c,e,d,r,g,h){return t(),s("div",null,e[0]||(e[0]=[i(`<h1 id="如何调试vite源码" tabindex="-1">如何调试vite源码 <a class="header-anchor" href="#如何调试vite源码" aria-label="Permalink to &quot;如何调试vite源码&quot;">​</a></h1><p>通过整个工程的目录结构，我们可以得出 <code>vite</code> 是采用 <code>pnpm workspace</code> 的方式来管理整个项目的，接着查看 <code>pnpm-workspace.yaml</code> 文件。</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">packages</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;packages/*&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;playground/**&#39;</span></span></code></pre></div><p>从上面的 yaml 文件当中可以得到，vite 源码当中，分开了源码的包（即 <code>packages/*</code>) 和示例源码（即 <code>playgorund/**</code>）。</p><p>我们可以使用 <code>playgorund/**</code>中的项目进行调试。</p><h2 id="具体流程" tabindex="-1">具体流程 <a class="header-anchor" href="#具体流程" aria-label="Permalink to &quot;具体流程&quot;">​</a></h2><ol><li><p>切换到实例项目。执行<code>pnpm install</code>安装依赖</p></li><li><p>在<code>package.json</code>中添加命令<code>&quot;dev-debug&quot;: &quot;node ../../packages/vite/bin/vite --debug&quot;</code></p></li><li><p>使用<code>javascript debbuger</code>调试。可以直接在<code>package.json</code>文件中点击就行</p><p><img src="`+o+'" alt="image-20250103110138968"></p></li><li><p>然后就可以在<code>vite</code>项目中打断点进行调试了</p><p><img src="'+p+'" alt="image-20250103110222320"></p></li></ol>',7)]))}const m=a(n,[["render",l]]);export{_ as __pageData,m as default};
